version: '3.8'

services:
  db:
    image: postgres:13
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: flashcards
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  api:
    build: 
      context: ./api
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - db
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://user:password@db:5432/flashcards
    networks:
      - app-network
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flashcards-api.rule=Host(`flashcards-api.cooperelixer.tech`)"
      - "traefik.http.routers.flashcards-api.entrypoints=websecure"
      - "traefik.http.routers.flashcards-api.tls.certresolver=cloudflare"
      - "traefik.http.services.flashcards-api.loadbalancer.server.port=3000"

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - api
    environment:
      - REACT_APP_API_URL=https://flashcards-api.cooperelixer.tech
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flashcards-app.rule=Host(`flashcards.cooperelixer.tech`)"
      - "traefik.http.routers.flashcards-app.entrypoints=websecure"
      - "traefik.http.routers.flashcards-app.tls.certresolver=cloudflare"
      - "traefik.http.services.flashcards-app.loadbalancer.server.port=3000"

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
  traefik:
    external: true
